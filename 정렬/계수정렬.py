# 모든 원소의 값이 0보다 크거나 같다고 가정
array = [7, 5, 9, 0, 3, 1, 6, 2, 9, 1, 4, 8, 0, 5, 2]

# 모든 범위를 포함하는 리스트 선언(모든 값은 0으로 초기화)
count = [0] * (max(array) + 1)

# 데이터의 개수만큼 count를 체크하므로 O(N)
for i in range(len(array)):
    count[array[i]] = +1  # 각 데이터에 해당하는 인덱스의 값 증가
# 원소 중 가장 큰 값을 의미하는 K 만큼 그 인덱스를 확인하며, 기록되어 있는 만큼(N) 출력을 수행. 안쪽 반복문은 전체 수행 횟수가 N.
# 이중 반복문의 시간 복잡도는 N+K
for i in range(len(count)):  # 0~9
    for j in range(count[i]):
        print(i, end=" ")  # 등장 횟수만큼 인덱스 출력

# 전체 시간 복잡도는 단순히 O(N+K)라고 할 수 있음.
